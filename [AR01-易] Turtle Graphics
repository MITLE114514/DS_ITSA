#pragma warning(disable:4996)  
#pragma warning(disable:6031)  
#include <stdio.h>  
#include <stdlib.h>  
#include <string.h>  
#include <errno.h>  
 
#define MAP_S 50  
#define INPUT_S 20  
  
int main() {  
    char map[MAP_S][MAP_S] = { 0 };  
    for(int i = 0; i < MAP_S; i++)  
        memset(map[i], ' ', MAP_S);  
    int cmd = -1, move = -1;  
    int pos_r = 0, pos_c = 0;  
    int dir = 1; // E:1, S:2, W:3, N:4  
    int is_trace = 0; // up:0, down:1  
    int print_r = 1, print_c = 1;  
    char input[INPUT_S] = { "\0" };  
    while(fgets(input, INPUT_S, stdin)) {  
        cmd = -1, move = -1;  
        sscanf(input, "%d,%d", &cmd, &move);  
        if(cmd == 1)  
            is_trace = 0;  
        else if(cmd == 2) {  
            is_trace = 1;  
            map[pos_r][pos_c] = '*';  
            if(print_r <= pos_r)  
                print_r = pos_r++;  
            if(print_c <= pos_c)  
                print_c = pos_c++;  
        }  
        else if(cmd == 3) {  
            dir++;  
            if(dir == 5)  
                dir = 1;  
        }  
        else if(cmd == 4) {  
            dir--;  
            if(dir == 0)  
                dir = 4;  
        }  
        else if(cmd == 5) {  
            for(int i = 0; i < move; i++) {  
                if(dir == 1)  
                    pos_c++;  
                else if(dir == 2)  
                    pos_r++;  
                else if(dir == 3)  
                    pos_c--;  
                else if(dir == 4)  
                    pos_r--;  
                if(is_trace == 1) {  
                    map[pos_r][pos_c] = '*';  
                    if(print_r <= pos_r)  
                        print_r = pos_r + 1;  
                    if(print_c <= pos_c)  
                        print_c = pos_c + 1;  
                }  
            }  
        }  
        else if(cmd == 6)  
            for(int i = 0; i < print_r; i++) {  
                for(int j = 0; j < print_c; j++)  
                    printf("%c", map[i][j]);  
                printf("\n");  
            }  
        else if(cmd == 9)  
            break;  
    }  
    fflush(stdin);  
    getchar();  
    exit(0);  
}
